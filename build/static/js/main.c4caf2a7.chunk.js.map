{"version":3,"sources":["components/Header.js","App.js","index.js"],"names":["Header","color","dark","expand","id","className","navbar","left","App","useState","countries","setCountries","limit","setLimit","activePage","setActivePage","totalCount","setTotalCount","searchCountry","setSearchCountry","useEffect","axios","get","headers","Authorization","then","res","i","state","data","name","length","total","catch","error","console","log","displayCountries","map","value","index","key","Fragment","md","lg","sm","type","onChange","event","target","placeholder","aria-label","data-test","parseInt","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkBeA,MAhBf,WACE,OACE,kBAAC,IAAD,CAAWC,MAAM,gBAAgBC,MAAI,EAACC,OAAO,MACzC,kBAAC,IAAD,KACE,4BAAQC,GAAG,UAAUC,UAAU,cAA/B,cAEF,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAcC,QAAM,GAClB,kBAAC,IAAD,CAAcC,MAAI,GAChB,kBAAC,IAAD,U,kCCmHGC,MAxHf,WAAgB,IAAD,EAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIuBJ,mBAAS,GAJhC,mBAINK,EAJM,KAIMC,EAJN,OAKuBN,mBAAS,GALhC,mBAKNO,EALM,KAKMC,EALN,OAM6BR,mBAAS,IANtC,mBAMNS,EANM,KAMSC,EANT,KASbC,qBAAU,WACRC,IACGC,IADH,4DAEyDR,EAFzD,kBAE6EF,EAF7E,oBAE8FM,GAC1F,CACEK,QAAS,CACPC,cAAe,uDAIpBC,MAAK,SAACC,GACLf,EAAa,IACb,IAFa,eAEJgB,GACPhB,GAAa,SAACiB,GAAD,4BAAeA,GAAf,CAAsBF,EAAIG,KAAKA,KAAKA,KAAKF,GAAGG,WADlDH,EAAI,EAAGA,EAAID,EAAIG,KAAKA,KAAKA,KAAKE,OAAQJ,IAAM,EAA5CA,GAGTV,EAAcS,EAAIG,KAAKG,UAExBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAACtB,EAAOE,EAAYI,IAEvB,IAAMmB,EAAmB3B,EAAU4B,KAAI,SAACC,EAAOC,GAC7C,OACE,wBAAIC,IAAKD,GACP,gCAAMD,OAsBZ,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQrC,UAAU,aAChB,kBAAC,IAAD,CAAQsC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACvB,yBAAKxC,UAAU,gBACb,2BACEA,UAAU,eACVyC,KAAK,OACLP,MAAOrB,EACP6B,SA3Be,SAACC,GAC1B7B,EAAiB6B,EAAMC,OAAOV,OACH,KAAvBS,EAAMC,OAAOV,OACfpB,EAAiB,IAEnBJ,EAAc,IAuBJmC,YAAY,iBACZC,aAAW,SACXrB,KAAK,SACL1B,GAAG,SACHgD,YAAU,eAIhB,kBAAC,IAAD,CAAQT,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKxC,UAAU,aACtC,yBAAKA,UAAU,mBACb,4BACEA,UAAU,eACVkC,MAAO3B,EACPmC,SAhCa,SAACC,GACxBnC,EAASwC,SAASL,EAAMC,OAAOV,SAgCrBT,KAAK,QACL1B,GAAG,SAEH,4BAAQmC,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,UAKR,kBAAC,IAAD,CAAQlC,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,wBAAIA,UAAU,aAAagC,GAC3B,yBAAKhC,UAAU,QACb,kBAAC,IAAD,CACED,GAAG,aACHU,WAAYA,EACZwC,kBAAmB1C,EACnB2C,gBAAiBvC,EACjBwC,mBAAoB,EACpBC,UAAU,YACVC,UAAU,YACVX,SApDa,SAACY,GACxB5C,EAAc4C,MAqDN,2BACEb,KAAK,SACL1C,GAAG,aACH0B,KAAK,aACLS,MAAOvB,MAIb,kBAAC,IAAD,SChHR4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c4caf2a7.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\nfunction Header() {\n  return (\n    <MDBNavbar color=\"default-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <strong id=\"country\" className=\"white-text\">Countries</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler/>\n        <MDBCollapse  navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n    </MDBNavbar>\n  );\n}\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport Header from \"./components/Header\";\nimport axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\n\nfunction App() {\n  \n  const [countries, setCountries] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [activePage, setActivePage] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const [searchCountry, setSearchCountry] = useState(\"\");\n\n  // Fetch the country list\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:8000/api/rest-countries-v1/?page=${activePage}&limit=${limit}&country=${searchCountry}`,\n        {\n          headers: {\n            Authorization: \"d%#@##@ds93432$#%^#$#Dfdfd$%@#@)IOIkjkj&*$%^%GFGD\",\n          },\n        }\n      )\n      .then((res) => {\n        setCountries([]);\n        for (let i = 0; i < res.data.data.data.length; i++) {\n          setCountries((state) => [...state, res.data.data.data[i].name]);\n        }\n        setTotalCount(res.data.total);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [limit, activePage, searchCountry]);\n\n  const displayCountries = countries.map((value, index) => {\n    return (\n      <ul key={index}>\n        <li> {value}</li>\n      </ul>\n    );\n  });\n\n  const handleSearchChange = (event) => {\n    setSearchCountry(event.target.value);\n    if (event.target.value === \"\") {\n      setSearchCountry(\"\");\n    }\n    setActivePage(1);\n  };\n\n  // Configuring the limit of the countries name\n  const changeLimitValue = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const handleChangePage = (number) => {\n    setActivePage(number);\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <MDBRow className=\"ml-0 mr-0\">\n        <MDBCol md=\"9\" lg=\"9\" sm=\"12\">\n          <div className=\"md-form mt-0\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={searchCountry}\n              onChange={handleSearchChange}\n              placeholder=\"Search Country\"\n              aria-label=\"Search\"\n              name=\"search\"\n              id=\"search\"\n              data-test=\"dateTab1\"\n            />\n          </div>\n        </MDBCol>\n        <MDBCol md=\"3\" lg=\"3\" sm=\"12\" className=\"word-wrap\">\n          <div className=\"form-group mt-2\">\n            <select\n              className=\"form-control\"\n              value={limit}\n              onChange={changeLimitValue}\n              name=\"limit\"\n              id=\"limit\"\n            >\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </div>\n        </MDBCol>\n      </MDBRow>\n      <MDBRow className=\"ml-0 mr-0\">\n        <MDBCol></MDBCol>\n        <MDBCol>\n          <h5 className=\"mt-5 ml-5\">{displayCountries}</h5>\n          <div className=\"mt-5\">\n            <Pagination\n              id=\"pagination\"\n              activePage={activePage}\n              itemsCountPerPage={limit}\n              totalItemsCount={totalCount}\n              pageRangeDisplayed={5}\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n              onChange={handleChangePage}\n            />\n            <input\n              type=\"hidden\"\n              id=\"totalcount\"\n              name=\"totalcount\"\n              value={totalCount}\n            />\n          </div>\n        </MDBCol>\n        <MDBCol></MDBCol>\n      </MDBRow>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./App\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}